{"ast":null,"code":"import { USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS } from \"../constants/userConstants\";\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const newUser = (email, username, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      username,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users', {\n      email,\n      username,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/patch/PROJECTS/Online_Journal/frontend/src/actions/userActions.js"],"names":["USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","signin","email","password","dispatch","type","payload","data","Axios","post","localStorage","setItem","JSON","stringify","error","response","message","newUser","username"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,mBAA3B,EAAgDC,mBAAhD,QAA2E,4BAA3E;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC3DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN,mBAAR;AAA6BO,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAtC,GAAD,CAAR;;AACA,MAAI;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMC,KAAK,CAACC,IAAN,CAAW,mBAAX,EAAgC;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAhC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,mBAAR;AAA6BM,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AACH,GAJD,CAIE,OAAOO,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,gBADD;AAELQ,MAAAA,OAAO,EACHQ,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACMF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAD1B,GAEMF,KAAK,CAACE;AALX,KAAD,CAAR;AAOH;AACJ,CAfM;AAiBP,OAAO,MAAMC,OAAO,GAAG,CAACf,KAAD,EAAQgB,QAAR,EAAkBf,QAAlB,KAA+B,MAAOC,QAAP,IAAoB;AACtEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN,mBAAR;AAA6BO,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASgB,MAAAA,QAAT;AAAmBf,MAAAA;AAAnB;AAAtC,GAAD,CAAR;;AACA,MAAI;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMC,KAAK,CAACC,IAAN,CAAW,YAAX,EAAyB;AAAEP,MAAAA,KAAF;AAASgB,MAAAA,QAAT;AAAmBf,MAAAA;AAAnB,KAAzB,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,mBAAR;AAA6BM,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AACH,GAJD,CAIE,OAAOO,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,gBADD;AAELQ,MAAAA,OAAO,EACHQ,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACMF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAD1B,GAEMF,KAAK,CAACE;AALX,KAAD,CAAR;AAOH;AACJ,CAfM","sourcesContent":["import { USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS } from \"../constants/userConstants\"\r\n\r\nexport const signin = (email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n    try {\r\n        const { data } = await Axios.post('/api/users/signin', { email, password });\r\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SIGNIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const newUser = (email, username, password) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, username, password } });\r\n    try {\r\n        const { data } = await Axios.post('/api/users', { email, username, password });\r\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SIGNIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}